---
- name: Install Nginx web server on RHEL os family
  tags: rhel.nginx
  yum:
    name: nginx
    state: latest
  when: ansible_facts['os_family']|lower == 'redhat'

- name: Install Nginx web server on DEBIAN os family
  tags: debin.nginx
  apt:
    name: nginx
    state: latest
  when: ansible_facts['os_family']|lower == 'debian'

- name: Create nginx config
  template:
    src: roles/nginx.srv/templates/nginx.conf.j2
    dest: /etc/nginx/nginx.conf

- name: Create Virtual Hosts directory
  tags: vhdirs
  ansible.builtin.file:
    path: '/var/www/{{ vi_host }}'
    state: directory
    mode: '0755'
    owner: www-data
    group: www-data

- name: Create index page
  tags: html
  template:
    src: roles/nginx.srv/templates/index.html.j2
    dest: '/var/www/{{ vi_host }}/index.html'

- name: Remove managed idefault config files.
  file:
    path: '/etc/nginx/sites-enabled/default'
    state: absent

- name: Remove managed idefault config files.
  file:
    path: '/etc/nginx/sites-available/default'
    state: absent

- name: Create Vhosts config
  tags: def.conf
  template:
    src: roles/nginx.srv/templates/vhenable.j2
    dest: '/etc/nginx/sites-available/{{ vi_host }}.conf'

- name: Enable {{ vi_host }} web site
  ansible.builtin.file:
    src: '/etc/nginx/sites-available/{{ vi_host }}.conf'
    dest: '/etc/nginx/sites-enabled/{{ vi_host }}.conf'
    state: link

- name: Start Nginx
  tags: nginx.service
  service:
    name: nginx
    state: started
    enabled: true

- name: Create upstream config
  template:
    src: roles/nginx.srv/templates/default.j2
    dest: /etc/nginx/sites-available/upstream.conf
  notify: restart nginx

- name: Enable Upstream
  ansible.builtin.file:
    src: /etc/nginx/sites-available/upstream.conf
    dest: /etc/nginx/sites-enabled/upstream.conf
    state: link
  notify: restart nginx

- name: Check status UPSTREAM page http://up.rayne.ru:8080
  tags: urlcheck
  ansible.builtin.uri:
    url: http://up.rayne.ru:8080
